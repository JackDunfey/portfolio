{"proj_id": 0, "name": "Phishing Education Tool", "short_desc": "I made a website that looks similar to Facebook that serves to educate people about Phishing attacks.","description": "I made a website the emulated the UI of Facebook in order to deceive people into entering their phone number and email (no passwords or authentication details were collected). After they entered this info, they were redirected to a page that would educate them about Phishing and how to recognize and avoid phishing attempts. The website can be foundwas previously hosted at faccboolc.cf, but I have since removed it, and the code can be viewed <a href='//github.com/pyjshtml/Phishing_edu'>here</a>.", "lessons": "This project was a great chance for me to practice my graphic design and UX skills.", "pros": "<ul><li>Convincingly represented Facebook's \"Forgot Account\" page</li><li>I created a my own (very basic) Node.js database system</ul>", "cons": "<ul><li>I would make this look more like Facebook's current page because it was changed shortly after this website was made</li></ul>", "img_src": "/static/images/projects/phishing.jpg"}
{"proj_id": 1, "name": "Maze Escape", "short_desc": "This game stems from my first attempt at a maze generation and solution finding algorithm. ","description": "This game was not designed with the UI in mind. The player spawns as a packman-like character in the top-left corner of the maze. All the walls, except for those in front of the player, are invisible. They players job is to navigate through the dark maze to the bottom-right corner. The website can be found <a href='https://mazes-2.auto1245.repl.co/'>here</a> and the code is <a href='//replit.com/@auto1245/Mazes-2'>here</a>.", "lessons": "<ul><li>This project was a great chance for me to practice designing and implementing alorithms (This project uses an algorithm for maze generation and then a second one to solve the maze)</li>", "pros": "<ul><li>The game is playable and entertaining</li><li>The algoritms are effective</li><li>I was able to imrpvoe it with user feedback</li></ul>", "cons": "<ul><li>If I were to continue developing this project, I would change the design to make it look better</li><li>I would include a start button</li><li>I would develop the storyline</li><li>I would provide more detailed instructions</li></ul>", "img_src": "/static/images/projects/mazethumbnail.jpg"}
{"proj_id": 2, "name": "Video Chat", "short_desc": "A simple video chat application that runs in a web browser.","description": "This project uses peer-to-peer networking to connect and share video with a host computer. The program allows for multiple video chats to be happening simultaneously through the assignment of a random id to each host", "lessons": "<ul><li>What is Peer-to-Peer programming</li><li>How to make effective user interactions</li></ul>", "pros": "<ul><li>Video and audio stream without data loss</li></ul>", "cons": "<ul><li>Random IDs are not necessarily unique</li><li>Only 2 people can join the same call</li></ul>", "img_src": "/static/images/projects/videochat.png", "NOTES": "do the stuff"}
{"proj_id": 3, "name": "Graphing Calculator", "short_desc": "During this project, I learned about graphics, creating a language, and information storage.","description": "This was a project for CSC 190 in which we had to graphically display the output of several equations; however, I wasn't satisfied with just using preprogrammed equations, I wanted my code to be useful, so I added a regular input box in which the user can type in any equation of their choosing. The code for the project can be found <a href='https://github.com/pyjshtml/Graphing_Calculator'>here</a>.", "lessons": "<ul><li>How to design creatively and quickly</li><li>How to lex, parse, and interpret user data</li><li>How to efficiently store information</li></ul>", "pros": "<ul><li>The program successfully graphed all test equations</li><li>The webstie met all criteria and constraints set by the professor</li></ul>", "cons": "<ul><li>Data storage isn't fully optimized</li><li>Code could likely be significantly refactored</li></ul>", "img_src": "/static/images/projects/graphing_calc.png"}
{"proj_id": 4, "name": "CountBot", "short_desc": "A complete discord bot that I developed using the discord.js API that is now on the official \"NRD Squad\" discord server", "description": "The discord bot requires cooperation and coordination of the members of the server to count to a high number.", "lessons": "<ul><li>How to use the Discord.js api</li><li>How to parse text commands</li></ul>", "pros": "<ul><li>Is a fun multiplayer game</li><li>Taught me the basics of discord.js</li></ul>", "cons": "<ul><li>Basic functionality</li><li>Not scalable</li></ul>", "img_src": "/static/images/projects/countbotdiscord.png"}
{"proj_id": 5, "name": "Hangman AI", "short_desc": "An AI that is able to play a single-word hangman game", "description": "This AI uses a dictionary and letter probability to try to solve hangman. Although not technically an AI, it is a sophisticated algorithm and the title helps to generate interest.", "lessons": "<ul><li>How to compress code</li><li>How to make a project in a timely manner</li></ul>", "pros": "<ul><li>Functional and fun</li><li>Works reasonably well</ul>", "cons": "<ul><li>Doesn't work all the time</li><li>Try to make this project more practical such as use the algorithm to make an autocomplete</li></ul>", "img_src": "/static/images/projects/hangman.png"}
{"proj_id": 6, "name": "Flappybird AI", "short_desc": "A simple, rudimentary AI.","description": "This is an AI that plays the popular indie game \"Flappybird\". A working demo can be found <a href='flap.chrisdunfey.com'>here</a> and the code can be found <a href='https://github.com/pyjshtml/flappybirdAIhttps://github.com/pyjshtml/flappybirdAI'>here</a>", "lessons": "<ul><li>I learned how to make a simple AI</li><li>I learned how to make simple browser graphics</li><li>Learned about serialization</li></ul>", "pros": "<ul><li>Fun to watch</li><li>Decent GUI and design</li></ul>", "cons": "<ul><li>Backpropogation would train the algorithm more efficiently than the randomization currently used</li></ul>", "img_src": "/static/images/projects/flapAI.png"}
{"proj_id": 7, "name": "Portfolio Website", "short_desc": "This server", "description": "This is the server that hosts my portfolio website. The server uses a variety of modern backend and frontend languages and techniques. <b>Extra credit for coding?</b>", "lessons": "This website uses:<ul><li>A custom database class</li><li>Responsive design</li><li>Rendered pug pages</li></ul>", "pros": "<ul><li>The website uses a modern, responsive design to facilite a positive UX</li><li>The website accurately showcases my projects</li></ul>", "cons": "<ul><li>Design is glitchy for some subpages</li><li>The individual project pages are boring</li><li>I would add more pictures for projects</li><li>I would add demos/examples for some projects</li></ul>", "img_src": "/static/images/projects.png"}
// Add image_alt?